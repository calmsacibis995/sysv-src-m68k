/*	@(#)ops.out	2.1		*/


/*			Assembler Directives				*/
{"file",	PSEUDO,		IFILE-256,	0,	0x0L},
{"ln",		PSEUDO,		ILN-256,	0,	0x0L},
{"def",		PSEUDO,		IDEF-256,	0,	0x0L},
{"endef",	PSEUDO,		IENDEF-256,	0,	0x0L},
{"val",		PSEUDO,		IVAL-256,	0,	0x0L},
{"type",	PSEUDO,		ITYPE-256,	0,	0x0L},
{"line",	PSEUDO,		ILINE-256,	0,	0x0L},
{"scl",		PSEUDO,		ISCL-256,	0,	0x0L},
{"tag",		PSEUDO,		ITAG-256,	0,	0x0L},
{"size",	PSEUDO,		ISIZE-256,	0,	0x0L},
{"dim",		PSEUDO,		IDIM-256,	0,	0x0L},
{"set",		PSEUDO,		ISET-256,	0,	0x0L},
{"global",	PSEUDO,		IGLOBAL-256,	0,	0x0L},
{"data",	PSEUDO,		IDATA-256,	0,	0x0L},
{"text",	PSEUDO,		ITEXT-256,	0,	0x0L},
{"byte",	PSEUDO,		IBYTE-256,	0,	0x0L},
{"short",	PSEUDO,		ISHORT-256,	0,	0x0L},
{"long",	PSEUDO,		ILONG-256,	0,	0x0L},
{"space",	PSEUDO,		ISPACE-256,	0,	0x0L},
{"org",		PSEUDO,		IORG-256,	0,	0x0L},
{"comm",	PSEUDO,		ICOMM-256,	0,	0x0L},
{"lcomm",	PSEUDO,		ILCOMM-256,	0,	0x0L},
{"even",	PSEUDO,		IEVEN-256,	0,	0x0L},
{"swbeg",	PSEUDO,		ISWBEG-256,	0,	0x0L},


/*				Registers				*/
{"%d0",		ADREG,		REG-256,	0,	0x0L},
{"%d1",		ADREG,		REG-256,	0,	0x1L},
{"%d2",		ADREG,		REG-256,	0,	0x2L},
{"%d3",		ADREG,		REG-256,	0,	0x3L},
{"%d4",		ADREG,		REG-256,	0,	0x4L},
{"%d5",		ADREG,		REG-256,	0,	0x5L},
{"%d6",		ADREG,		REG-256,	0,	0x6L},
{"%d7",		ADREG,		REG-256,	0,	0x7L},
{"%a0",		AAREG,		REG-256,	0,	0x0L},
{"%a1",		AAREG,		REG-256,	0,	0x1L},
{"%a2",		AAREG,		REG-256,	0,	0x2L},
{"%a3",		AAREG,		REG-256,	0,	0x3L},
{"%a4",		AAREG,		REG-256,	0,	0x4L},
{"%a5",		AAREG,		REG-256,	0,	0x5L},
{"%a6",		AAREG,		REG-256,	0,	0x6L},
{"%fp",		AAREG,		REG-256,	0,	0x6L},
{"%a7",		AAREG,		REG-256,	0,	0x7L},
{"%sp",		AAREG,		REG-256,	0,	0x7L},
{"%pc",		PCREG,		REG-256,	0,	PCREG},
{"%usp",	CTLREG,		REG-256,	0,	USPREG},
{"%cc",		CCREG,		REG-256,	0,	CCREG},
{"%sr",		SRREG,		REG-256,	0,	SRREG},
{"%sfc",	CTLREG,		REG-256,	0,	0x000L},
{"%dfc",	CTLREG,		REG-256,	0,	0x001L},
{"%vbr",	CTLREG,		REG-256,	0,	0x801L},

#if	M68020
	/*	null register mnemonics for 68020 addr. modes	*/
{"%zd0",	NULDREG,	REG-256,	0,	0x0L},
{"%zd1",	NULDREG,	REG-256,	0,	0x0L},
{"%zd2",	NULDREG,	REG-256,	0,	0x0L},
{"%zd3",	NULDREG,	REG-256,	0,	0x0L},
{"%zd4",	NULDREG,	REG-256,	0,	0x0L},
{"%zd5",	NULDREG,	REG-256,	0,	0x0L},
{"%zd6",	NULDREG,	REG-256,	0,	0x0L},
{"%zd7",	NULDREG,	REG-256,	0,	0x0L},
{"%za0",	NULAREG,	REG-256,	0,	0x0L},
{"%za1",	NULAREG,	REG-256,	0,	0x0L},
{"%za2",	NULAREG,	REG-256,	0,	0x0L},
{"%za3",	NULAREG,	REG-256,	0,	0x0L},
{"%za4",	NULAREG,	REG-256,	0,	0x0L},
{"%za5",	NULAREG,	REG-256,	0,	0x0L},
{"%za6",	NULAREG,	REG-256,	0,	0x0L},
{"%za7",	NULAREG,	REG-256,	0,	0x0L},
#endif	M68020


/*			Instruction Mnemonics				*/
{"abcd",	DADD,		INST2-256,	16,	0xc100L},
{"add",		ADD,		INST2-256,	16,	0xd000L},
{"addi",	ADD,		INST2-256,	16,	0x0600L},
{"addq",	ADD,		INST2-256,	16,	0x5000L},
{"addx",	XADD,		INST2-256,	16,	0xd100L},
{"and",		LOGAND,		INST2-256,	16,	0xc000L},
{"andi",	LOGAND,		INST2-256,	16,	0x0200L},
{"asl",		ASHFT,		INST2-256,	16,	0xe1c0L},
{"asr",		ASHFT,		INST2-256,	16,	0xe0c0L},
{"br",		BRA,		INST1-256,	16,	0x6000L},
{"bra",		BRA,		INST1-256,	16,	0x6000L},
{"bhi",		BR,		INST1-256,	16,	0x6200L},
{"bls",		BR,		INST1-256,	16,	0x6300L},
{"bhs",		BR,		INST1-256,	16,	0x6400L},
{"bcc",		BR,		INST1-256,	16,	0x6400L},
{"blo",		BR,		INST1-256,	16,	0x6500L},
{"bcs",		BR,		INST1-256,	16,	0x6500L},
{"bne",		BR,		INST1-256,	16,	0x6600L},
{"beq",		BR,		INST1-256,	16,	0x6700L},
{"bvc",		BR,		INST1-256,	16,	0x6800L},
{"bvs",		BR,		INST1-256,	16,	0x6900L},
{"bpl",		BR,		INST1-256,	16,	0x6a00L},
{"bmi",		BR,		INST1-256,	16,	0x6b00L},
{"bge",		BR,		INST1-256,	16,	0x6c00L},
{"blt",		BR,		INST1-256,	16,	0x6d00L},
{"bgt",		BR,		INST1-256,	16,	0x6e00L},
{"ble",		BR,		INST1-256,	16,	0x6f00L},
{"bchg",	BCHG,		INST2-256,	16,	0x0140L},
{"bclr",	BCHG,		INST2-256,	16,	0x0180L},
{"bset",	BCHG,		INST2-256,	16,	0x01c0L},
{"bsr",		BSR,		INST1-256,	16,	0x6100L},
{"btst",	BTST,		INST2-256,	16,	0x0100L},
{"chk",		MULT,		INST2-256,	16,	0x4180L},
{"clr",		OPTSIZE,	INST1-256,	16,	0x4200L},
{"cmp",		CMP,		INST2-256,	16,	0xb000L},
{"cmpi",	CMP,		INST2-256,	16,	0x0c00L},
{"dbt",		DBCC,		INST2-256,	16,	0x50c8L},
{"dbf",		DBCC,		INST2-256,	16,	0x51c8L},
{"dbr",		DBCC,		INST2-256,	16,	0x51c8L},
{"dbra",	DBCC,		INST2-256,	16,	0x51c8L},
{"dbhi",	DBCC,		INST2-256,	16,	0x52c8L},
{"dbls",	DBCC,		INST2-256,	16,	0x53c8L},
{"dbhs",	DBCC,		INST2-256,	16,	0x54c8L},
{"dbcc",	DBCC,		INST2-256,	16,	0x54c8L},
{"dblo",	DBCC,		INST2-256,	16,	0x55c8L},
{"dbcs",	DBCC,		INST2-256,	16,	0x55c8L},
{"dbne",	DBCC,		INST2-256,	16,	0x56c8L},
{"dbeq",	DBCC,		INST2-256,	16,	0x57c8L},
{"dbvc",	DBCC,		INST2-256,	16,	0x58c8L},
{"dbvs",	DBCC,		INST2-256,	16,	0x59c8L},
{"dbpl",	DBCC,		INST2-256,	16,	0x5ac8L},
{"dbmi",	DBCC,		INST2-256,	16,	0x5bc8L},
{"dbge",	DBCC,		INST2-256,	16,	0x5cc8L},
{"dblt",	DBCC,		INST2-256,	16,	0x5dc8L},
{"dbgt",	DBCC,		INST2-256,	16,	0x5ec8L},
{"dble",	DBCC,		INST2-256,	16,	0x5fc8L},
{"divs",	MULT,		INST2-256,	16,	0x81c0L},
{"divu",	MULT,		INST2-256,	16,	0x80c0L},
{"eor",		LOGEOR,		INST2-256,	16,	0xb000L},
{"eori",	LOGEOR,		INST2-256,	16,	0x0a00L},
{"exg",		EXG,		INST2-256,	16,	0xc100L},
{"ext",		EXT,		INST1-256,	16,	0x4800L},
{"illegal",	DEFAULT+UNSPEC,	INST0-256,	16,	0x4afcL},
{"jmp",		DEFAULT+UNSPEC,	INST1-256,	16,	0x4ec0L},
{"jsr",		DEFAULT+UNSPEC,	INST1-256,	16,	0x4e80L},
{"lea",		LEA,		INST2-256,	16,	0x41c0L},
{"link",	LINK,		INST2-256,	16,	0x4e50L},
{"lsl",		LSHFT,		INST2-256,	16,	0xe3c0L},
{"lsr",		LSHFT,		INST2-256,	16,	0xe2c0L},
{"mov",		MOV,		INST2-256,	16,	0x0000L},
{"movm",	MOVM,		INST2-256,	16,	0x4880L},
{"movp",	MOVP,		INST2-256,	16,	0x0008L},
{"movs",	MOVS,		INST2-256,	16,	0x0e00L},
{"muls",	MULT,		INST2-256,	16,	0xc1c0L},
{"mulu",	MULT,		INST2-256,	16,	0xc0c0L},
{"nbcd",	DEFAULT+B,	INST1-256,	16,	0x4800L},
{"neg",		OPTSIZE,	INST1-256,	16,	0x4400L},
{"negx",	OPTSIZE,	INST1-256,	16,	0x4000L},
{"nop",		DEFAULT+UNSPEC,	INST0-256,	16,	0x4e71L},
{"not",		OPTSIZE,	INST1-256,	16,	0x4600L},
{"or",		LOGOR,		INST2-256,	16,	0x8000L},
{"ori",		LOGOR,		INST2-256,	16,	0x0000L},
{"pea",		DEFAULT+L,	INST1-256,	16,	0x4840L},
{"reset",	DEFAULT+UNSPEC,	INST0-256,	16,	0x4e70L},
{"rol",		ROT,		INST2-256,	16,	0xe7c0L},
{"ror",		ROT,		INST2-256,	16,	0xe6c0L},
{"roxl",	ROTX,		INST2-256,	16,	0xe5c0L},
{"roxr",	ROTX,		INST2-256,	16,	0xe4c0L},
{"rtd",		RTD,		INST1-256,	16,	0x4e74L},
{"rte",		DEFAULT+UNSPEC,	INST0-256,	16,	0x4e73L},
{"rtr",		DEFAULT+UNSPEC,	INST0-256,	16,	0x4e77L},
{"rts",		DEFAULT+UNSPEC,	INST0-256,	16,	0x4e75L},
{"sbcd",	DADD,		INST2-256,	16,	0x8100L},
{"st",		DEFAULT+B,	INST1-256,	16,	0x50c0L},
{"sf",		DEFAULT+B,	INST1-256,	16,	0x51c0L},
{"shi",		DEFAULT+B,	INST1-256,	16,	0x52c0L},
{"sls",		DEFAULT+B,	INST1-256,	16,	0x53c0L},
{"shs",		DEFAULT+B,	INST1-256,	16,	0x54c0L},
{"scc",		DEFAULT+B,	INST1-256,	16,	0x54c0L},
{"slo",		DEFAULT+B,	INST1-256,	16,	0x55c0L},
{"scs",		DEFAULT+B,	INST1-256,	16,	0x55c0L},
{"sne",		DEFAULT+B,	INST1-256,	16,	0x56c0L},
{"seq",		DEFAULT+B,	INST1-256,	16,	0x57c0L},
{"svc",		DEFAULT+B,	INST1-256,	16,	0x58c0L},
{"svs",		DEFAULT+B,	INST1-256,	16,	0x59c0L},
{"spl",		DEFAULT+B,	INST1-256,	16,	0x5ac0L},
{"smi",		DEFAULT+B,	INST1-256,	16,	0x5bc0L},
{"sge",		DEFAULT+B,	INST1-256,	16,	0x5cc0L},
{"slt",		DEFAULT+B,	INST1-256,	16,	0x5dc0L},
{"sgt",		DEFAULT+B,	INST1-256,	16,	0x5ec0L},
{"sle",		DEFAULT+B,	INST1-256,	16,	0x5fc0L},
{"stop",	STOP,		INST1-256,	16,	0x4e72L},
{"sub",		ADD,		INST2-256,	16,	0x9000L},
{"subi",	ADD,		INST2-256,	16,	0x0400L},
{"subq",	ADD,		INST2-256,	16,	0x5100L},
{"subx",	XADD,		INST2-256,	16,	0x9100L},
{"swap",	SWAP,		INST1-256,	16,	0x4840L},
{"tas",		DEFAULT+B,	INST1-256,	16,	0x4ac0L},
{"trap",	TRAP,		INST1-256,	16,	0x4e40L},
{"trapv",	DEFAULT+UNSPEC,	INST0-256,	16,	0x4e76L},
{"tst",		OPTSIZE,	INST1-256,	16,	0x4a00L},
{"unlk",	UNLK,		INST1-256,	16,	0x4e58L},
